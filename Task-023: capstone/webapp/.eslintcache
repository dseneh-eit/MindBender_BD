[{"/home/user/Desktop/bigdata/capstone/webapp/src/index.js":"1","/home/user/Desktop/bigdata/capstone/webapp/src/App.js":"2","/home/user/Desktop/bigdata/capstone/webapp/src/components/Dashboard.js":"3","/home/user/Desktop/bigdata/capstone/webapp/src/components/app/Home.js":"4","/home/user/Desktop/bigdata/capstone/webapp/src/components/app/Region.js":"5","/home/user/Desktop/bigdata/capstone/webapp/src/components/app/Category.js":"6"},{"size":267,"mtime":1607649741629,"results":"7","hashOfConfig":"8"},{"size":5362,"mtime":1609084770340,"results":"9","hashOfConfig":"8"},{"size":475,"mtime":1607765081529,"results":"10","hashOfConfig":"8"},{"size":2007,"mtime":1608097980357,"results":"11","hashOfConfig":"8"},{"size":2475,"mtime":1607978289760,"results":"12","hashOfConfig":"8"},{"size":1937,"mtime":1608002140162,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1wck6o5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/user/Desktop/bigdata/capstone/webapp/src/index.js",[],["30","31"],"/home/user/Desktop/bigdata/capstone/webapp/src/App.js",[],"/home/user/Desktop/bigdata/capstone/webapp/src/components/Dashboard.js",[],"/home/user/Desktop/bigdata/capstone/webapp/src/components/app/Home.js",["32","33","34","35"],"import React, {useEffect, useState} from 'react';\nimport {Container, ProgressBar, Table} from \"react-bootstrap\";\n\nconst Home = (props) => {\nconst datalist = props.dataList\n  let total = 0;\nif (props.topVal){\n  total = props.topVal.view_count;\n}\n\n\n  return (\n      <div className=\"mt-2\">\n        <div className='container' style={{minWidth: \"80rem\"}}>\n          <Table striped bordered hover variant=\"dark\" size=\"sm\">\n            <thead>\n            <tr>\n              <th>Country</th>\n              <th>Time</th>\n              <th>Channel</th>\n              <th>Title</th>\n              <th>Category</th>\n              <th colSpan={2}>Views</th>\n              <th>Likes</th>\n              <th>DisLikes</th>\n              <th>Comments</th>\n            </tr>\n            </thead>\n            <tbody>\n\n            {datalist.map(data => (\n                <tr className='text-left'key={data.id}>\n                  <td>{data.country}</td>\n                  <td>{data.pub_time}</td>\n                  <td >{data.channel_title}</td>\n                  <td>{data.video_title.substring(0,25)}...</td>\n                  <td>{data.category}</td>\n                  <td className='text-center'>{data.view_count.toLocaleString()}</td>\n                  <td style={{width: '5%'}}>\n                    <div className='progress-bar bg-warning text-warning' style={{width: `${(data.view_count/total)*100}%`}}>\n                      {`${Math.round((data.view_count/total)*100)}%`}\n                    </div>\n                  </td>\n                  <td className='text-center'>{data.like_count === null ? 0 :data.like_count.toLocaleString()}</td>\n                  <td className='text-center'>{data.dislike_count === null ? 0 :data.dislike_count.toLocaleString()}</td>\n                  <td className='text-center'>{data.comment_count === null ? 0 :data.comment_count.toLocaleString()}</td>\n                </tr>\n            ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n  );\n};\n\nexport default Home;\n","/home/user/Desktop/bigdata/capstone/webapp/src/components/app/Region.js",["36","37","38","39","40"],"import React from 'react';\nimport {Bar, Doughnut} from \"react-chartjs-2\";\n\nconst Region = (props) => {\n\n    const regions = props.dataList\n    let labels = []\n    let countries = []\n    let views = []\n\n    let catViews = []\n    //\n    {\n        regions.map(r => (\n            labels.push(r.country),\n                views.push(r.views)\n        ))\n    }\n    // console.log(views)\n    // console.log(labels)\n    // let label = [...new Set(labels)]\n    // const getCountry = (country) => {\n    //     return regions.filter(r => r.country === country).map(r => r.views)\n    // }\n    // const catList = ['Sports', 'Music', 'People & Blogs', 'Entertainment', 'Film & Animation',\n    //     'Autos & Vehicles', 'Pets & Animals', 'Travel & Events', 'Gaming', 'Comedy',\n    //     'News & Politics', 'Howto & Style', 'Science & Technology', 'Education', 'Nonprofits & Activism'\n    // ]\n    const colors = ['red', 'blue', 'orange', 'green', 'pink', 'yellow', 'violet', 'black', 'teal', 'grey']\n    const country = ['USA', 'Germany', 'China', 'Great Britain', 'Russia', 'South Korea', 'Japan', 'India', 'Canada', 'France']\n\n    const state = {\n        labels: labels,\n        datasets: [\n            {\n                label: '# of views',\n                backgroundColor: colors,\n                data: views,\n                options: {}\n\n            },\n        ]\n    }\n    return (\n        <div >\n            <div className=\"row bg-transparent\">\n                <div className=\"col-lg-8\">\n                    <Bar\n                        data={state}\n                        width={100}\n                        height={300}\n                        options={{\n                            maintainAspectRatio: false,\n                            legend: {\n                                display: false,\n                            }\n                        }}\n                    />\n                </div>\n                <div className=\"col-lg-4\">\n                    <Doughnut\n                        data={state}\n                        width={100}\n                        height={300}\n                        options={{\n                            maintainAspectRatio: false,\n                            legend: {\n                                display: true,\n                                position: 'right'\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n\n\n        </div>\n    );\n};\n\nexport default Region;","/home/user/Desktop/bigdata/capstone/webapp/src/components/app/Category.js",["41","42"],"import React from 'react';\nimport {Line} from \"react-chartjs-2\";\n\nconst Category = (props) => {\n\n    const categories = props.dataCat\n    let labels = []\n    let views = []\n\n    {\n        categories.map(r => (\n            labels.push(r.category),\n                views.push(r.views)\n                // console.log(r)\n        ))\n    }\n    // const labelsFilter = [...new Set(labels)]\n\n    const colors = ['red', 'blue', 'orange', 'green', 'pink', 'yellow', 'violet', 'black', 'teal', 'grey']\n\n    const state = {\n        labels: labels,\n        datasets: [\n            {\n                label: 'Distribution by Category',\n                fill: false,\n                border: 1,\n                borderColor: 'brown',\n                backgroundColor: colors,\n                data: views,\n                options: {}\n            },\n        ]\n    }\n    return (\n        <div className='container mt-2' style={{minWidth: \"80rem\"}}>\n            <h4 className='mt-3 border-top border-bottom'>Distribution by Category</h4>\n            <div className=\"\">\n                <Line\n                    data={state}\n                    width={100}\n                    height={250}\n                    options={{\n                        maintainAspectRatio: false,\n                        legend: {\n                            display: false,\n                            label: {\n                                fontSize:16\n                            }\n                        },\n                        scales: {\n                            xAxes: [{\n                                ticks: {\n                                    autoSkip: false,\n                                    maxRotation: 90,\n                                    minRotation: 90\n                                }\n                            }]\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Category;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":16,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"51","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":35},{"ruleId":"47","severity":1,"message":"52","line":2,"column":9,"nodeType":"49","messageId":"50","endLine":2,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":2,"column":20,"nodeType":"49","messageId":"50","endLine":2,"endColumn":31},{"ruleId":"47","severity":1,"message":"54","line":8,"column":9,"nodeType":"49","messageId":"50","endLine":8,"endColumn":18},{"ruleId":"47","severity":1,"message":"55","line":11,"column":9,"nodeType":"49","messageId":"50","endLine":11,"endColumn":17},{"ruleId":"56","severity":1,"message":"57","line":13,"column":5,"nodeType":"58","messageId":"59","endLine":18,"endColumn":6},{"ruleId":"60","severity":1,"message":"61","line":15,"column":35,"nodeType":"62","messageId":"63","endLine":15,"endColumn":36},{"ruleId":"47","severity":1,"message":"64","line":30,"column":11,"nodeType":"49","messageId":"50","endLine":30,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":10,"column":5,"nodeType":"58","messageId":"59","endLine":16,"endColumn":6},{"ruleId":"60","severity":1,"message":"61","line":12,"column":36,"nodeType":"62","messageId":"63","endLine":12,"endColumn":37},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Container' is defined but never used.","'ProgressBar' is defined but never used.","'countries' is assigned a value but never used.","'catViews' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'country' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]